apiVersion: batch/v1
kind: CronJob
metadata:
  name: github-polling-job
  namespace: argo-events
spec:
  schedule: "* * * * *"  # Poll every minute
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: poller
            image: leonrahul/curl-jq:latest
            imagePullPolicy: Always
            command:
            - /bin/sh
            - -c
            - |
              # Install jq
              # apk add --no-cache jq

              # Fetch GitHub events
              echo "Fetching GitHub events..."
              RESPONSE=$(curl -s -H "Authorization: token $(cat /etc/github-token/github-token)" \
                                -H "Accept: application/vnd.github.v3+json" \
                                https://api.github.com/repos/anandrahul23/vriddhi-app-leonrahul/events)

              # Log the full response
              echo "GitHub Events Response:"
              echo "$RESPONSE"

              # Extract the latest event from the master branch
              echo "Filtering the latest event from the master branch..."
              LATEST_EVENT=$(echo "$RESPONSE" | jq '[.[] | select(.payload.ref == "refs/heads/master")][0]')
              echo "Latest Event: $LATEST_EVENT"

              # Extract the commit ID from the latest event
              LATEST_COMMIT=$(echo "$LATEST_EVENT" | jq -r '.payload.head')
              echo "Latest Commit ID: $LATEST_COMMIT"


              # Check if the commit ID has changed
              echo "Checking for changes in the commit ID..."
              PREVIOUS_COMMIT=$(cat /data/previous_commit 2>/dev/null || echo "")
              echo "Previous Commit ID: $PREVIOUS_COMMIT"
              if [ "$LATEST_COMMIT" != "$PREVIOUS_COMMIT" ]; then
                echo "New commit detected. Publishing the latest event to the webhook..."
                echo "$LATEST_EVENT" | curl -s -X POST -H "Content-Type: application/json" -d @- \
                                      http://user-service-webhook-eventsource-svc.argo-events.svc.cluster.local:12000/github
                echo "Latest event published successfully."

                # Save the latest commit ID for future comparisons
                echo "$LATEST_COMMIT" > /data/previous_commit
              else
                echo "No new commits detected. Skipping publishing."
              fi

              # Log completion
              echo "Job completed. Exiting."
            volumeMounts:
            - name: github-token
              mountPath: /etc/github-token
              readOnly: true
            - name: commit-data
              mountPath: /data
          restartPolicy: Never  # Ensure the pod does not restart
          volumes:
          - name: github-token
            secret:
              secretName: github-token-sec
          - name: commit-data
            persistentVolumeClaim:
              claimName: github-commit-pvc
      backoffLimit: 0  # Ensure resources are cleaned up after the job completes

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: github-commit-pvc
  namespace: argo-events
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Mi